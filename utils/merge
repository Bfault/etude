#!/usr/bin/env python3

import os
import re
import sys
from datetime import datetime

def adjust_paths(content):
    return re.sub(r'(\\includegraphics(?:\[.*\])?{)\.\./(.*})', r'\1\2', content)

def extract_content(file_path, start_marker, end_marker):
    extracting = False
    content = []
    with open(file_path, 'r') as file:
        for line in file:
            if start_marker in line:
                extracting = True
                continue
            if end_marker in line:
                extracting = False
            if extracting:
                content.append(line)
    return ''.join(content)

def main(input_dir, start_marker, end_marker):
    if not os.path.isdir(input_dir):
        print(f"{input_dir} does not exist.")
        return

    subject_name = os.path.basename(input_dir.rstrip('/'))
    output_file = os.path.join(input_dir, f"{subject_name}.tex")

    with open('./utils/template_merge.tex', 'r') as template_file:
        template_content = template_file.read()
        template_content = template_content.replace('DATE_PLACEHOLDER', datetime.now().strftime('%d %B %Y'))
        template_content = template_content.replace('TITLE_PLACEHOLDER', subject_name.replace('_', ' ').title())

    with open(output_file, 'w') as output:
        header, _, footer = template_content.partition(r'%TEXT')
        output.write(header)

        for subdir in sorted([d for d in os.listdir(input_dir) if os.path.isdir(os.path.join(input_dir, d))]):
            tex_file = next((f for f in os.listdir(os.path.join(input_dir, subdir)) if f.endswith('.tex')), None)
            if tex_file:
                tex_path = os.path.join(input_dir, subdir, tex_file)
                
                content = extract_content(tex_path, start_marker, end_marker)
                adjusted_content = adjust_paths(content)
                
                output.write(f"\n% Begin of {tex_file}\n")
                output.write(adjusted_content)
                output.write(f"\n% End of {tex_file}\n")
        
        output.write('\n' + footer)

    print(f"Generated file : {output_file}")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python script.py <input_dir> [start_marker] [end_marker]")
        sys.exit(1)
    
    input_dir = sys.argv[1]
    start_marker = sys.argv[2] if len(sys.argv) > 2 else R"\maketitle"
    end_marker = sys.argv[3] if len(sys.argv) > 3 else R"\end{document}"
    
    main(input_dir, start_marker, end_marker)
